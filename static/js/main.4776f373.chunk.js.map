{"version":3,"sources":["components/Listing/ListingItem/index.js","components/Listing/utils.js","components/Listing/index.js","App.js","reportWebVitals.js","index.js"],"names":["ListingItem","titlePreview","item","url","MainImage","title","currency_code","price","quantity","length","substring","code","currency","itemQuantity","itemQuantityLevel","className","href","src","url_570xN","alt","Listing","items","filter","state","map","listing_id","defaultProps","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"o+hFAEe,SAASA,EAAT,GAAgC,IAGzCC,EAHgCC,EAAQ,EAARA,KAC5BC,EAA0DD,EAA1DC,IAAKC,EAAqDF,EAArDE,UAAWC,EAA0CH,EAA1CG,MAAOC,EAAmCJ,EAAnCI,cAAeC,EAAoBL,EAApBK,MAAOC,EAAaN,EAAbM,SAGhCP,EAArBI,EAAMI,OAAS,GAAqBJ,EAAMK,UAAU,EAAG,IAAM,SAAuBL,EAEpF,ICRmCM,EDQ7BC,ECPO,SADsBD,EDQGL,GCN7B,IACW,QAATK,EACF,SAEF,KDIDE,ECDD,SAA2BL,GAChC,IAAIK,EAAe,gBAQnB,OAPIL,GAAY,GACdK,GAAgB,aACPL,GAAY,GACrBK,GAAgB,gBACPL,EAAW,KACpBK,GAAgB,eAEXA,EDRcC,CAAkBN,GAEvC,OACE,sBAAKO,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,mBAAGC,KAAMb,EAAT,SACE,qBAAKc,IAAKb,EAAUc,UAAWC,IAAKd,QAGxC,sBAAKU,UAAU,eAAf,UACE,mBAAGA,UAAU,aAAb,SAA2Bd,IAC1BW,EACC,oBAAGG,UAAU,aAAb,UACGH,EACAL,KAGH,oBAAGQ,UAAU,aAAb,UACGR,EADH,OACgBD,KAGlB,oBAAGS,UAAWF,EAAd,UAA6BL,EAA7B,iBE7BO,SAASY,EAAT,GAA6B,IAAVC,EAAS,EAATA,MAChC,OACE,qBAAKN,UAAU,YAAf,SACGM,EAAMC,QAAO,SAAApB,GAAI,MAAmB,WAAfA,EAAKqB,SAAoBC,KAAI,SAACtB,GAAD,OACjD,cAACF,EAAD,CAAaE,KAAMA,GAAWA,EAAKuB,iBAM3CL,EAAQM,aAAe,CACrBL,MAAO,I,WCRM,SAASM,IACtB,OAAO,cAACP,EAAD,CAASC,MAAOA,ICNzB,IAYeO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4776f373.chunk.js","sourcesContent":["import { currencyCodeToSymbol, itemQuantityLevel } from '../utils';\n\nexport default function ListingItem({ item }) {\n  const { url, MainImage, title, currency_code, price, quantity } = item;\n\n  let titlePreview;\n  title.length > 50 ? (titlePreview = title.substring(0, 50) + '…') : (titlePreview = title);\n\n  const currency = currencyCodeToSymbol(currency_code);\n\n  const itemQuantity = itemQuantityLevel(quantity);\n\n  return (\n    <div className=\"item\">\n      <div className=\"item-image\">\n        <a href={url}>\n          <img src={MainImage.url_570xN} alt={title} />\n        </a>\n      </div>\n      <div className=\"item-details\">\n        <p className=\"item-title\">{titlePreview}</p>\n        {currency ? (\n          <p className=\"item-price\">\n            {currency}\n            {price}\n          </p>\n        ) : (\n          <p className=\"item-price\">\n            {price}&nbsp;{currency_code}\n          </p>\n        )}\n        <p className={itemQuantity}>{quantity} left</p>\n      </div>\n    </div>\n  );\n}\n","export function currencyCodeToSymbol(code) {\n  if (code === 'USD') {\n    return '$';\n  } else if (code === 'EUR') {\n    return '€';\n  }\n  return null;\n}\n\nexport function itemQuantityLevel(quantity) {\n  let itemQuantity = 'item-quantity';\n  if (quantity <= 10) {\n    itemQuantity += ' level-low';\n  } else if (quantity <= 20) {\n    itemQuantity += ' level-medium';\n  } else if (quantity > 20) {\n    itemQuantity += ' level-high';\n  }\n  return itemQuantity;\n}\n","import ListingItem from './ListingItem';\n\nexport default function Listing({ items }) {\n  return (\n    <div className=\"item-list\">\n      {items.filter(item => item.state === 'active').map((item) => (\n        <ListingItem item={item} key={item.listing_id} />\n      ))}\n    </div>\n  );\n}\n\nListing.defaultProps = {\n  items: [],\n};\n","import React from 'react';\nimport './App.css';\nimport Listing from './components/Listing';\nimport items from './etsy.json';\n\nexport default function App() {\n  return <Listing items={items} />;\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}